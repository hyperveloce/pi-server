events {
  use epoll;
  worker_connections 128;
}

http {
  server {
    location ~ /transmission {
      proxy_pass "http://transmission:9091";
      proxy_http_version 1.1;
      proxy_set_header   Upgrade          $http_upgrade;
      proxy_set_header   Connection       $http_connection;
      proxy_set_header   Host             $host;
      proxy_set_header   X-Real-IP        $remote_addr;
      proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
      proxy_redirect off;
      proxy_buffering off;
    }
    location /sonarr {
      proxy_pass "http://sonarr:8989";
      proxy_http_version 1.1;
      proxy_set_header   Upgrade          $http_upgrade;
      proxy_set_header   Connection       $http_connection;
      proxy_set_header   Host             $host;
      proxy_set_header   X-Real-IP        $remote_addr;
      proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
      proxy_redirect off;
      proxy_buffering off;
    }
    location /radarr {
      proxy_pass "http://radarr:7878";
      proxy_http_version 1.1;
      proxy_set_header   Upgrade          $http_upgrade;
      proxy_set_header   Connection       $http_connection;
      proxy_set_header   Host             $host;
      proxy_set_header   X-Real-IP        $remote_addr;
      proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
      proxy_redirect off;
      proxy_buffering off;
    }
    location /overseerr/ {
        proxy_pass http://overseerr:5055; # No trailing slash
        proxy_http_version 1.1;

        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support (if needed)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Rewrite incoming URL to remove /overseerr/
        rewrite ^/overseerr/(.*)$ /$1 break;

        # Disable compression to allow sub_filter to work
        proxy_set_header Accept-Encoding "";

        # Subfilter to rewrite resource paths in responses
        sub_filter_types text/html text/css application/javascript application/json;
        sub_filter '="/' '="/overseerr/'; # Rewrite absolute paths
        sub_filter "='/" "='/overseerr/"; # Handle single-quoted paths
        sub_filter 'href="/' 'href="/overseerr/'; # HTML href attributes
        sub_filter 'src="/' 'src="/overseerr/'; # Script/image sources
        sub_filter '"/_next/' '"/overseerr/_next/'; # Explicitly handle Next.js assets
        sub_filter_once off; # Apply filters to all matches

        # Additional proxy settings
        proxy_redirect off;
        proxy_buffering off; # Optional for real-time apps
    }

    # Catch-all for unmatched requests (optional, for debugging)
    location / {
        return 404; # Ensure requests not under /overseerr/ are rejected
    }
    location /prowlarr {
      proxy_pass "http://prowlarr:9696";
      proxy_http_version 1.1;
      proxy_set_header   Upgrade          $http_upgrade;
      proxy_set_header   Connection       $http_connection;
      proxy_set_header   Host             $host;
      proxy_set_header   X-Real-IP        $remote_addr;
      proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
      proxy_redirect off;
      proxy_buffering off;
    }
  }
}
